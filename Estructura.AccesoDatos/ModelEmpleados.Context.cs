//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Estructura.AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BD3CapasEntities : DbContext
    {
        public BD3CapasEntities()
            : base("name=BD3CapasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Departamento> Departamentoes { get; set; }
        public virtual DbSet<Empleado> Empleadoes { get; set; }
        public virtual DbSet<Puesto> Puestoes { get; set; }
        public virtual DbSet<VistaUnion> VistaUnions { get; set; }
    
        public virtual int AddEmpleado(string nombre, Nullable<int> puestoID, Nullable<int> departamentoId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var puestoIDParameter = puestoID.HasValue ?
                new ObjectParameter("PuestoID", puestoID) :
                new ObjectParameter("PuestoID", typeof(int));
    
            var departamentoIdParameter = departamentoId.HasValue ?
                new ObjectParameter("DepartamentoId", departamentoId) :
                new ObjectParameter("DepartamentoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpleado", nombreParameter, puestoIDParameter, departamentoIdParameter);
        }
    
        public virtual ObjectResult<BusquedaEmpleado_Result> BusquedaEmpleado(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaEmpleado_Result>("BusquedaEmpleado", nombreParameter);
        }
    
        public virtual int DeleteEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<DepartamentoGetAll_Result> DepartamentoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepartamentoGetAll_Result>("DepartamentoGetAll");
        }
    
        public virtual ObjectResult<EmpleadosDepartamentoPuesto_Result> EmpleadosDepartamentoPuesto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadosDepartamentoPuesto_Result>("EmpleadosDepartamentoPuesto");
        }
    
        public virtual ObjectResult<PuestoGetAll_Result> PuestoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PuestoGetAll_Result>("PuestoGetAll");
        }
    }
}
